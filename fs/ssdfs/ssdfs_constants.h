/*
 * SPDX-License-Identifier: BSD-3-Clause-Clear
 *
 * SSDFS -- SSD-oriented File System.
 *
 * fs/ssdfs/ssdfs_constants.h - SSDFS constant declarations.
 *
 * Copyright (c) 2019-2024 Viacheslav Dubeyko <slava@dubeyko.com>
 *              http://www.ssdfs.org/
 * All rights reserved.
 *
 * Authors: Viacheslav Dubeyko <slava@dubeyko.com>
 */

#ifndef _SSDFS_CONSTANTS_H
#define _SSDFS_CONSTANTS_H

/*
 * Thread types
 */
enum {
	SSDFS_PEB_READ_THREAD,
	SSDFS_PEB_FLUSH_THREAD,
	SSDFS_PEB_GC_THREAD,
#ifdef CONFIG_SSDFS_ONLINE_FSCK
	SSDFS_PEB_FSCK_THREAD,
#endif /* CONFIG_SSDFS_ONLINE_FSCK */
	SSDFS_PEB_THREAD_TYPE_MAX,
};

enum {
	SSDFS_SEG_USING_GC_THREAD,
	SSDFS_SEG_USED_GC_THREAD,
	SSDFS_SEG_PRE_DIRTY_GC_THREAD,
	SSDFS_SEG_DIRTY_GC_THREAD,
	SSDFS_GC_THREAD_TYPE_MAX,
};

enum {
	SSDFS_256B	= 256,
	SSDFS_512B	= 512,
	SSDFS_1KB	= 1024,
	SSDFS_2KB	= 2048,
	SSDFS_4KB	= 4096,
	SSDFS_8KB	= 8192,
	SSDFS_16KB	= 16384,
	SSDFS_32KB	= 32768,
	SSDFS_64KB	= 65536,
	SSDFS_128KB	= 131072,
	SSDFS_256KB	= 262144,
	SSDFS_512KB	= 524288,
	SSDFS_1MB	= 1048576,
	SSDFS_2MB	= 2097152,
	SSDFS_4MB	= 4194304,
	SSDFS_8MB	= 8388608,
	SSDFS_16MB	= 16777216,
	SSDFS_32MB	= 33554432,
	SSDFS_64MB	= 67108864,
	SSDFS_128MB	= 134217728,
	SSDFS_256MB	= 268435456,
	SSDFS_512MB	= 536870912,
	SSDFS_1GB	= 1073741824,
	SSDFS_2GB	= 2147483648,
	SSDFS_4GB	= 4294967296,
	SSDFS_8GB	= 8589934592,
	SSDFS_16GB	= 17179869184,
	SSDFS_32GB	= 34359738368,
	SSDFS_64GB	= 68719476736,
};

#define SSDFS_256B_STRING	"265B"
#define SSDFS_512B_STRING	"512B"
#define SSDFS_1KB_STRING	"1KB"
#define SSDFS_2KB_STRING	"2KB"
#define SSDFS_4KB_STRING	"4KB"
#define SSDFS_8KB_STRING	"8KB"
#define SSDFS_16KB_STRING	"16KB"
#define SSDFS_32KB_STRING	"32KB"
#define SSDFS_64KB_STRING	"64KB"
#define SSDFS_128KB_STRING	"128KB"
#define SSDFS_256KB_STRING	"256KB"
#define SSDFS_512KB_STRING	"512KB"
#define SSDFS_1MB_STRING	"1MB"
#define SSDFS_2MB_STRING	"2MB"
#define SSDFS_4MB_STRING	"4MB"
#define SSDFS_8MB_STRING	"8MB"
#define SSDFS_16MB_STRING	"16MB"
#define SSDFS_32MB_STRING	"32MB"
#define SSDFS_64MB_STRING	"64MB"
#define SSDFS_128MB_STRING	"128MB"
#define SSDFS_256MB_STRING	"256MB"
#define SSDFS_512MB_STRING	"512MB"
#define SSDFS_1GB_STRING	"1GB"
#define SSDFS_2GB_STRING	"2GB"
#define SSDFS_4GB_STRING	"4GB"
#define SSDFS_8GB_STRING	"8GB"
#define SSDFS_16GB_STRING	"16GB"
#define SSDFS_32GB_STRING	"32GB"
#define SSDFS_64GB_STRING	"64GB"
#define SSDFS_NUMBER_UNKNOWN	"unknown"

enum {
	SSDFS_UNKNOWN_PAGE_TYPE,
	SSDFS_USER_DATA_PAGES,
	SSDFS_METADATA_PAGES,
	SSDFS_PAGES_TYPE_MAX
};

#define SSDFS_INVALID_CNO	U64_MAX
#define SSDFS_SECTOR_SHIFT	9
#define SSDFS_DEFAULT_TIMEOUT	(msecs_to_jiffies(120000))
#define SSDFS_NANOSECS_PER_SEC	(1000000000)
#define SSDFS_SECS_PER_HOUR	(60 * 60)
#define SSDFS_HOURS_PER_DAY	(24)
#define SSDFS_DAYS_PER_WEEK	(7)
#define SSDFS_WEEKS_PER_MONTH	(4)
#define SSDFS_EXTENT_LEN_MAX	(8)

/*
 * Every PEB contains a sequence of logs. Log starts from
 * header and could be ended by footer. Header and footer
 * requires as minimum 2 logical blocks for metadata.
 * It needs to prevent 2 logical blocks from allocation
 * in every erase block (PEB).
 */
#define SSDFS_RESERVED_FREE_PAGE_THRESHOLD_PER_PEB	(2)

static inline
const char *GRANULARITY2STRING(u64 value)
{
	switch (value) {
	case SSDFS_256B:
		return SSDFS_256B_STRING;
	case SSDFS_512B:
		return SSDFS_512B_STRING;
	case SSDFS_1KB:
		return SSDFS_1KB_STRING;
	case SSDFS_2KB:
		return SSDFS_2KB_STRING;
	case SSDFS_4KB:
		return SSDFS_4KB_STRING;
	case SSDFS_8KB:
		return SSDFS_8KB_STRING;
	case SSDFS_16KB:
		return SSDFS_16KB_STRING;
	case SSDFS_32KB:
		return SSDFS_32KB_STRING;
	case SSDFS_64KB:
		return SSDFS_64KB_STRING;
	case SSDFS_128KB:
		return SSDFS_128KB_STRING;
	case SSDFS_256KB:
		return SSDFS_256KB_STRING;
	case SSDFS_512KB:
		return SSDFS_512KB_STRING;
	case SSDFS_1MB:
		return SSDFS_1MB_STRING;
	case SSDFS_2MB:
		return SSDFS_2MB_STRING;
	case SSDFS_4MB:
		return SSDFS_4MB_STRING;
	case SSDFS_8MB:
		return SSDFS_8MB_STRING;
	case SSDFS_16MB:
		return SSDFS_16MB_STRING;
	case SSDFS_32MB:
		return SSDFS_32MB_STRING;
	case SSDFS_64MB:
		return SSDFS_64MB_STRING;
	case SSDFS_128MB:
		return SSDFS_128MB_STRING;
	case SSDFS_256MB:
		return SSDFS_256MB_STRING;
	case SSDFS_512MB:
		return SSDFS_512MB_STRING;
	case SSDFS_1GB:
		return SSDFS_1GB_STRING;
	case SSDFS_2GB:
		return SSDFS_2GB_STRING;
	case SSDFS_4GB:
		return SSDFS_4GB_STRING;
	case SSDFS_8GB:
		return SSDFS_8GB_STRING;
	case SSDFS_16GB:
		return SSDFS_16GB_STRING;
	case SSDFS_32GB:
		return SSDFS_32GB_STRING;
	case SSDFS_64GB:
		return SSDFS_64GB_STRING;
	}

	return SSDFS_NUMBER_UNKNOWN;
}

#endif /* _SSDFS_CONSTANTS_H */
